* DONE New metadata support
  CLOSED: [2020-04-24 Fri 12:44] SCHEDULED: <2020-04-24 Fri 10:00>
  :PROPERTIES:
  :CUSTOM_ID: h:c8f1698f-dc37-44aa-bb61-f108ee84103d
  :END:
 
** Motivation
   :PROPERTIES:
   :CUSTOM_ID: h:891a6154-1575-467f-984d-33a336494e2d
   :END:
   - need concurrent garbage collection for datahike
   - in general how to deal with storage layout changes when they become
     necessary
 
** Filestore layout
   :PROPERTIES:
   :CUSTOM_ID: h:5371c4b0-9f00-41bb-a26e-e3ef642cc26d
   :END:
   - first 8 bytes: length of metadata
   - then metadata
   - then value (binary or edn serialized)
 
** Protocols
   :PROPERTIES:
   :CUSTOM_ID: h:3cae1664-cfbe-4470-8f16-dd7d93d20a65
   :END:
   - core
   - EDN
   - JSON remove
   - binary store
   - remove meta?
** Core
   :PROPERTIES:
   :CUSTOM_ID: h:a0c6c11b-6f3a-4230-b99a-df82638ef15b
   :END:
   - describe go-lock locking
   - schema metadata
   - keys are locked with =go-locked= through JVM mutexes
   - store lock?
** Filestore
   :PROPERTIES:
   :CUSTOM_ID: h:b9e42b49-cc0e-4532-9e4a-e7659c78d56a
   :END:
   - overview figure
   - documentation to functions
   - tests
** Migration
   :PROPERTIES:
   :CUSTOM_ID: h:29addea1-ffd5-40ca-b3b8-486eb562f716
   :END:
   - deprecating notice
   - necessary logging
   - upgrades on the fly
   - version number
   - explicit way which migration steps
   - resource usage during migration
   - function to determine version
   - dependency, old version
   - max penet
   - other Clojurists/people who might be interested? 
** Supported backends
   :PROPERTIES:
   :CUSTOM_ID: h:d2f3ced7-2102-4039-b89e-37cd474a614d
   :END:
   - redis?
   - indexeddb?
   - filestore
   - postgresql
   - leveldb
   - rocksdb
   - TODO list all backends without migration
